#!/usr/bin/env python3
"""
演示 Warm Start 的自適應保護機制

展示:
1. 正常情況下使用 warm start
2. 每 100 次自動驗證 (cold start)
3. 可以手動禁用 warm start
4. Conductor 電荷也被正確處理
"""

import sys
sys.path.append('./lib/')

print("=" * 80)
print("🛡️  Warm Start 自適應保護機制演示")
print("=" * 80)

print("\n功能說明:")
print("1. ✅ 正常使用 warm start (99% 時間)")
print("2. 🔄 每 100 次自動 cold start 驗證 (1% 時間)")
print("3. ⚠️  可以手動禁用 (不穩定階段)")
print("4. 🔌 Conductor 電荷也被保存/恢復")

print("\n使用範例:")
print("-" * 80)

print("\n# 場景 1: 正常 Production Run (穩定階段)")
print("```python")
print("for i in range(1000000):  # 100萬步模擬")
print("    integrator.step(1)")
print("    # 每 100 步更新電荷")
print("    if i % 100 == 0:")
print("        # 自動使用 warm start,每 100 次驗證")
print("        MMsys.Poisson_solver_fixed_voltage(Niterations=3)")
print("```")

print("\n# 場景 2: Equilibration (不穩定階段)")
print("```python")
print("for i in range(10000):  # 平衡階段")
print("    integrator.step(1)")
print("    if i % 100 == 0:")
print("        # 禁用 warm start,每次都 cold start")
print("        MMsys.Poisson_solver_fixed_voltage(")
print("            Niterations=3,")
print("            enable_warmstart=False  # 明確禁用")
print("        )")
print("```")

print("\n# 場景 3: 自定義驗證頻率")
print("```python")
print("# 更頻繁驗證 (每 50 次)")
print("MMsys.Poisson_solver_fixed_voltage(")
print("    Niterations=3,")
print("    enable_warmstart=True,")
print("    verify_interval=50  # 每 50 次驗證")
print(")")
print("")
print("# 完全信任 warm start (不驗證,最快但風險最高)")
print("MMsys.Poisson_solver_fixed_voltage(")
print("    Niterations=3,")
print("    enable_warmstart=True,")
print("    verify_interval=0  # 永不驗證 (不推薦!)")
print(")")
print("```")

print("\n" + "=" * 80)
print("🎯 推薦使用方式")
print("=" * 80)

print("\n階段 1: Equilibration (初始平衡, ~10-20ns)")
print("  建議: enable_warmstart=False")
print("  理由: 系統變化大,warm start 效果有限且可能不穩定")
print("")
print("階段 2: Production (數據收集, ~100-1000ns)")  
print("  建議: enable_warmstart=True, verify_interval=100 (預設)")
print("  理由: 系統穩定,warm start 節省大量時間,定期驗證保證準確性")
print("")
print("階段 3: 電壓掃描 / MC 移動")
print("  建議: enable_warmstart=False")
print("  理由: 系統有大幅擾動,warm start 的初始猜測可能失效")

print("\n" + "=" * 80)
print("📊 性能估算")
print("=" * 80)

print("\n假設: 100ns MD 模擬, 1fs 時間步")
print("  - 總步數: 100,000,000")
print("  - Poisson 調用: 1,000,000 次 (每 100 步)")
print("")
print("不使用 warm start:")
print("  - 每次調用: 0.076s")
print("  - 總時間: 1,000,000 × 0.076s = 76,000s ≈ 21 小時")
print("")
print("使用 warm start (verify_interval=100):")
print("  - 99% 調用 (warm): 0.055s")
print("  - 1% 調用 (cold):  0.076s")
print("  - 平均時間: 0.99 × 0.055 + 0.01 × 0.076 = 0.0552s")
print("  - 總時間: 1,000,000 × 0.0552s = 55,200s ≈ 15.3 小時")
print("  - 節省: 21 - 15.3 = 5.7 小時!")
print("")
print("使用 warm start (verify_interval=0, 不驗證):")
print("  - 所有調用 (warm): 0.055s")
print("  - 總時間: 1,000,000 × 0.055s = 55,000s ≈ 15.3 小時")
print("  - 僅比有驗證快 3.6 分鐘")
print("  - ⚠️  不值得為了 3 分鐘放棄驗證!")

print("\n" + "=" * 80)
print("⚠️  重要提醒")
print("=" * 80)

print("\n1. 定期驗證很重要!")
print("   - 只增加 1% 開銷")
print("   - 能檢測潛在問題")
print("   - 保證長期準確性")
print("")
print("2. 不穩定階段請禁用 warm start!")
print("   - Equilibration")
print("   - 電壓掃描")
print("   - MC barostat")
print("   - 溫度變化")
print("")
print("3. 如有疑慮,寧可保守!")
print("   - 可以多驗證 (verify_interval=50)")
print("   - 可以完全禁用 (enable_warmstart=False)")
print("   - 準確性 > 速度")

print("\n" + "=" * 80)
print("✅ 實施完成!")
print("=" * 80)
print("\n修改的檔案: lib/MM_classes_CYTHON.py")
print("\n新增功能:")
print("  1. enable_warmstart 參數 (可手動禁用)")
print("  2. verify_interval 參數 (定期驗證)")
print("  3. Conductor 電荷保存/恢復")
print("  4. 調用計數器 (_warmstart_call_counter)")
print("\n向後兼容: 所有參數都有預設值,現有代碼無需修改")
print("=" * 80)
